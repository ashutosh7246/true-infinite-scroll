{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\n\n// const DB = [];\n// const chunks = [];\n\nfunction useProducts(chunkSize) {\n  _s();\n  const [nextPage, setNextPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [hasMore, setHasMore] = useState(true);\n  const [error, setError] = useState(false);\n  const [list, setList] = useState([]);\n  const [totalItems, setMaxItemCount] = useState(0);\n\n  // const counter = useRef(0);\n\n  // useEffect(() => {\n  //   for (let i = 0; i < 194; i++) {\n  //     DB.push({ id: i + 1, label: `${i + 1}-label` });\n  //   }\n  //   for (let i = 0; i < DB.length; i += 10) {\n  //     chunks.push(DB.slice(i, i + 10));\n  //   }\n  // }, []);\n\n  const fetchData = nextPage => {\n    // setList((lst) => [...lst, ...chunks[nextPage - 1]]);\n    // if (list.length + chunks[nextPage - 1].length >= 194) {\n    //   setHasMore(false);\n    // }\n    // setMaxItemCount(194);\n    // setNextPage(nextPage + 1);\n\n    setLoading(true);\n    fetch(`https://dummyjson.com/products?limit=${chunkSize}&skip=${(nextPage - 1) * chunkSize}`).then(res => res.json()).then(res => {\n      // ====================================================\n      // for testing purpose\n      // if (nextPage === 5 && counter.current < 5) {\n      //   counter.current++;\n      //   throw new Error(\"break it\");\n      // }\n      // counter.current = 0;\n      // ====================================================\n      setList(lst => [...lst, ...res.products]);\n      if (list.length + res.products.length >= res.total) {\n        setHasMore(false);\n      }\n      setError(false);\n      setMaxItemCount(res.total);\n      const currentPage = res.skip / res.limit + 1;\n      setNextPage(currentPage + 1);\n    }).catch(e => {\n      setError(true);\n    }).finally(() => {\n      setLoading(false);\n    });\n  };\n  const reset = () => {\n    setHasMore(true);\n    setError(false);\n    setLoading(false);\n    setList([]);\n    setMaxItemCount(0);\n    setNextPage(1);\n  };\n  return {\n    totalItems,\n    list,\n    hasMore,\n    loading,\n    error,\n    nextPage,\n    fetchData,\n    reset\n  };\n}\n_s(useProducts, \"1Z5MfmhNYxTQ0ZT004DfzWxwMEE=\");\nexport default useProducts;","map":{"version":3,"names":["useState","useProducts","chunkSize","_s","nextPage","setNextPage","loading","setLoading","hasMore","setHasMore","error","setError","list","setList","totalItems","setMaxItemCount","fetchData","fetch","then","res","json","lst","products","length","total","currentPage","skip","limit","catch","e","finally","reset"],"sources":["/Users/ashutoshshukla/Documents/workspace/true-infinite-scroll/packages/test/src/hooks/useProducts.ts"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n\n// const DB = [];\n// const chunks = [];\n\ninterface DataObject {\n  [key: string]: any; // Define specific properties as needed\n}\n\nfunction useProducts(chunkSize: number) {\n  const [nextPage, setNextPage] = useState(1);\n  const [loading, setLoading] = useState(false);\n  const [hasMore, setHasMore] = useState(true);\n  const [error, setError] = useState(false);\n  const [list, setList] = useState<Array<DataObject>>([]);\n  const [totalItems, setMaxItemCount] = useState(0);\n\n  // const counter = useRef(0);\n\n  // useEffect(() => {\n  //   for (let i = 0; i < 194; i++) {\n  //     DB.push({ id: i + 1, label: `${i + 1}-label` });\n  //   }\n  //   for (let i = 0; i < DB.length; i += 10) {\n  //     chunks.push(DB.slice(i, i + 10));\n  //   }\n  // }, []);\n\n  const fetchData = (nextPage: number) => {\n    // setList((lst) => [...lst, ...chunks[nextPage - 1]]);\n    // if (list.length + chunks[nextPage - 1].length >= 194) {\n    //   setHasMore(false);\n    // }\n    // setMaxItemCount(194);\n    // setNextPage(nextPage + 1);\n\n    setLoading(true);\n    fetch(\n      `https://dummyjson.com/products?limit=${chunkSize}&skip=${\n        (nextPage - 1) * chunkSize\n      }`\n    )\n      .then((res) => res.json())\n      .then((res) => {\n        // ====================================================\n        // for testing purpose\n        // if (nextPage === 5 && counter.current < 5) {\n        //   counter.current++;\n        //   throw new Error(\"break it\");\n        // }\n        // counter.current = 0;\n        // ====================================================\n        setList((lst) => [...lst, ...res.products]);\n        if (list.length + res.products.length >= res.total) {\n          setHasMore(false);\n        }\n        setError(false);\n        setMaxItemCount(res.total);\n        const currentPage = res.skip / res.limit + 1;\n        setNextPage(currentPage + 1);\n      })\n      .catch((e) => {\n        setError(true);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  const reset = () => {\n    setHasMore(true);\n    setError(false);\n    setLoading(false);\n    setList([]);\n    setMaxItemCount(0);\n    setNextPage(1);\n  };\n\n  return {\n    totalItems,\n    list,\n    hasMore,\n    loading,\n    error,\n    nextPage,\n    fetchData,\n    reset,\n  };\n}\n\nexport default useProducts;\n"],"mappings":";AAAA,SAA4BA,QAAQ,QAAQ,OAAO;;AAEnD;AACA;;AAMA,SAASC,WAAWA,CAACC,SAAiB,EAAE;EAAAC,EAAA;EACtC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACM,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAoB,EAAE,CAAC;EACvD,MAAM,CAACc,UAAU,EAAEC,eAAe,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;;EAEjD;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMgB,SAAS,GAAIZ,QAAgB,IAAK;IACtC;IACA;IACA;IACA;IACA;IACA;;IAEAG,UAAU,CAAC,IAAI,CAAC;IAChBU,KAAK,CACH,wCAAwCf,SAAS,SAC/C,CAACE,QAAQ,GAAG,CAAC,IAAIF,SAAS,EAE9B,CAAC,CACEgB,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEC,GAAG,IAAK;MACb;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACAN,OAAO,CAAEQ,GAAG,IAAK,CAAC,GAAGA,GAAG,EAAE,GAAGF,GAAG,CAACG,QAAQ,CAAC,CAAC;MAC3C,IAAIV,IAAI,CAACW,MAAM,GAAGJ,GAAG,CAACG,QAAQ,CAACC,MAAM,IAAIJ,GAAG,CAACK,KAAK,EAAE;QAClDf,UAAU,CAAC,KAAK,CAAC;MACnB;MACAE,QAAQ,CAAC,KAAK,CAAC;MACfI,eAAe,CAACI,GAAG,CAACK,KAAK,CAAC;MAC1B,MAAMC,WAAW,GAAGN,GAAG,CAACO,IAAI,GAAGP,GAAG,CAACQ,KAAK,GAAG,CAAC;MAC5CtB,WAAW,CAACoB,WAAW,GAAG,CAAC,CAAC;IAC9B,CAAC,CAAC,CACDG,KAAK,CAAEC,CAAC,IAAK;MACZlB,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,CACDmB,OAAO,CAAC,MAAM;MACbvB,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;EACN,CAAC;EAED,MAAMwB,KAAK,GAAGA,CAAA,KAAM;IAClBtB,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,KAAK,CAAC;IACfJ,UAAU,CAAC,KAAK,CAAC;IACjBM,OAAO,CAAC,EAAE,CAAC;IACXE,eAAe,CAAC,CAAC,CAAC;IAClBV,WAAW,CAAC,CAAC,CAAC;EAChB,CAAC;EAED,OAAO;IACLS,UAAU;IACVF,IAAI;IACJJ,OAAO;IACPF,OAAO;IACPI,KAAK;IACLN,QAAQ;IACRY,SAAS;IACTe;EACF,CAAC;AACH;AAAC5B,EAAA,CA/EQF,WAAW;AAiFpB,eAAeA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}