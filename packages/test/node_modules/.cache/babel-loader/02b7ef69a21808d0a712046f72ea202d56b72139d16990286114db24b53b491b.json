{"ast":null,"code":"var _jsxFileName = \"/Users/ashutoshshukla/Documents/workspace/npm-workspace/packages/test/src/components/VirtualInfiniteScroll/Scroll.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport List from \"./List\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Scroll = ({\n  totalItems,\n  list,\n  hasMore,\n  loading,\n  nextPage,\n  fetchData,\n  chunkSize,\n  Card,\n  height,\n  listElementHeight = 200,\n  listGap = 10,\n  LoadingList,\n  LoadingMore,\n  goToTop = {},\n  refreshList = {}\n}) => {\n  _s();\n  const {\n    showGoToTop,\n    GoToTopButton,\n    goToTopStyle\n  } = goToTop;\n  const {\n    showRefresh,\n    onRefresh,\n    RefreshButton,\n    refreshButtonStyle\n  } = refreshList;\n  const currentIndex = useRef(0);\n  const startElmObserver = useRef(null);\n  const lastElmObserver = useRef(null);\n  const listRef = useRef(null);\n  const [listItems, setListItems] = useState([]);\n  const cssUpdating = useRef(false);\n  const initList = useRef(false);\n  const refApplied = useRef(false);\n  const prevPage = useRef(undefined);\n  const goingToTop = useRef(false);\n  useEffect(() => {\n    if (!list || !list.length || initList.current) {\n      return;\n    }\n    if (totalItems <= chunkSize * 2) {\n      setListItems(list);\n      initList.current = true;\n      return;\n    }\n    if (hasMore && nextPage === 2) {\n      fetchData(nextPage);\n      return;\n    }\n    if (list.length < chunkSize * 2) return;\n    setListItems(list);\n    initList.current = true;\n  }, [list, chunkSize, totalItems, hasMore, nextPage]);\n  const renderList = () => {\n    if (totalItems <= chunkSize * 2) {\n      return list.length ? true : false;\n    }\n    return list.length < chunkSize * 2 ? false : true;\n  };\n  function isMobileBrowser() {\n    return /Mobi|Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n  }\n  const applyRef = () => {\n    if (refApplied.current) return true;\n    const listHeight = Number(height);\n    const elementsHeight = listItems.length * (listElementHeight + listGap);\n    if (elementsHeight > listHeight + listElementHeight + listGap + 10) {\n      refApplied.current = true;\n      return true;\n    }\n    return false;\n  };\n  const getSlidingWindow = isScrollDown => {\n    const increment = chunkSize;\n    let firstIndex = isScrollDown ? currentIndex.current + increment : currentIndex.current - increment;\n    return Math.max(firstIndex, 0);\n  };\n  const recycleDOM = firstIndex => {\n    const items = [];\n    const domPageSize = chunkSize * 2;\n    for (let i = 0; i < domPageSize; i++) {\n      if (list[i + firstIndex]) {\n        items.push(list[i + firstIndex]);\n      }\n    }\n    requestAnimationFrame(() => {\n      setListItems([...items]);\n    });\n  };\n  const adjustPaddings = isScrollDown => {\n    if (currentIndex.current === 0) {\n      return;\n    }\n    cssUpdating.current = true;\n    if (!isScrollDown && isMobileBrowser()) {\n      // ===============================this code cut off user touch from the screen for mobile devices=============================== //\n      const listParent = document.querySelector(\".IS-list-parent\");\n      if (listParent) {\n        listParent.style.display = \"none\";\n        setTimeout(() => {\n          listParent.style.display = \"block\";\n        }, 0);\n      }\n      // ===============================this code cut off user touch from the screen for mobile devices=============================== //\n    }\n    const ul = document.querySelector(\".IS-list\");\n    if (ul) {\n      const currentPadTop = parseFloat(ul.style.paddingTop) || 0;\n      const currentPadBottom = parseFloat(ul.style.paddingBottom) || 0;\n      const remPaddingsVal = (listElementHeight + listGap) * chunkSize + listGap;\n      const newPadTop = isScrollDown ? currentPadTop + remPaddingsVal : 0;\n      const newPadBottom = isScrollDown ? 0 : currentPadBottom + remPaddingsVal;\n      requestAnimationFrame(() => {\n        const container = document.querySelector(\".IS-list-parent\");\n        if (container) {\n          const scrollPosition = container.scrollTop;\n          ul.style.paddingTop = `${Math.max(newPadTop, 0)}px`;\n          if (!isScrollDown) {\n            container.scrollTop = scrollPosition - currentPadTop;\n          }\n          if (!isScrollDown) {\n            container.scrollTop = container.scrollTop + remPaddingsVal;\n            setTimeout(() => {\n              cssUpdating.current = false;\n            }, 0);\n          } else {\n            cssUpdating.current = false;\n          }\n        }\n      });\n    }\n  };\n  const topSentCallback = entry => {\n    if (cssUpdating.current || goingToTop.current) return;\n    if (currentIndex.current === 0) {\n      requestAnimationFrame(() => {\n        const container = document.querySelector(\".IS-list\");\n        if (container && container.style) {\n          container.style.paddingTop = \"0px\";\n        }\n      });\n    }\n    if (entry.isIntersecting && currentIndex.current !== 0) {\n      const firstIndex = getSlidingWindow(false);\n      adjustPaddings(false);\n      recycleDOM(firstIndex);\n      currentIndex.current = firstIndex;\n    }\n  };\n  const botSentCallback = entry => {\n    const domPageSize = chunkSize * 2;\n    if (currentIndex.current === totalItems - domPageSize || loading || cssUpdating.current || goingToTop.current) {\n      return;\n    }\n    if (entry.isIntersecting) {\n      const firstIndex = getSlidingWindow(true);\n      if (list[firstIndex + chunkSize]) {\n        currentIndex.current = firstIndex;\n        adjustPaddings(true);\n        recycleDOM(firstIndex);\n      } else if (hasMore) {\n        // safe check\n        if (prevPage.current === nextPage) {\n          console.error(\"Observer disconnected due to too many calls with the same arguments\");\n          prevPage.current = undefined;\n          return;\n        }\n        fetchData(nextPage);\n        prevPage.current = nextPage;\n      }\n    }\n  };\n  const startElmRef = node => {\n    if (startElmObserver.current) {\n      startElmObserver.current.disconnect();\n    }\n    startElmObserver.current = new IntersectionObserver(entries => {\n      topSentCallback(entries[0]);\n    });\n    if (node) {\n      startElmObserver.current.observe(node);\n    }\n  };\n  const lastElmRef = node => {\n    if (lastElmObserver.current) {\n      lastElmObserver.current.disconnect();\n    }\n    lastElmObserver.current = new IntersectionObserver(entries => {\n      botSentCallback(entries[0]);\n    });\n    if (node) {\n      lastElmObserver.current.observe(node);\n    }\n  };\n\n  // const isTouching = useRef(false);\n  // useEffect(() => {\n  //   const handleTouchStart = () => {\n  //     isTouching.current = true;\n  //   };\n\n  //   const handleTouchEnd = () => {\n  //     isTouching.current = false;\n  //   };\n\n  //   const handleTouchCancel = () => {\n  //     isTouching.current = false;\n  //   };\n\n  //   window.addEventListener(\"touchstart\", handleTouchStart);\n  //   window.addEventListener(\"touchend\", handleTouchEnd);\n  //   window.addEventListener(\"touchcancel\", handleTouchCancel);\n\n  //   return () => {\n  //     window.removeEventListener(\"touchstart\", handleTouchStart);\n  //     window.removeEventListener(\"touchend\", handleTouchEnd);\n  //     window.removeEventListener(\"touchcancel\", handleTouchCancel);\n  //   };\n  // }, [listItems]);\n\n  const isBottom = () => {\n    if (currentIndex.current !== 0) {\n      return true;\n    }\n    return false;\n  };\n  const scrollToTop = () => {\n    // disable scroll when going to top\n    document.body.classList.add(\"disable-touch\");\n    goingToTop.current = true;\n    const ul = document.querySelector(\".IS-list\");\n    if (ul) {\n      ul.style.paddingTop = `0px`;\n      ul.style.paddingBottom = `0px`;\n      const listParent = document.querySelector(\".IS-list-parent\");\n      if (listParent) {\n        listParent.scrollTop = 0;\n      }\n      const items = [];\n      const domPageSize = chunkSize * 2;\n      for (let i = 0; i < domPageSize; i++) {\n        if (list[i]) {\n          items.push(list[i]);\n        }\n      }\n      requestAnimationFrame(() => {\n        setListItems([...items]);\n      });\n      currentIndex.current = 0;\n    }\n    goingToTop.current = false;\n    document.body.classList.remove(\"disable-touch\");\n  };\n  const renderScrollTopView = () => {\n    var _goToTopStyle$borderR, _goToTopStyle$boxShad;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: renderList() && isBottom() && showGoToTop ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: GoToTopButton ? /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: scrollToTop,\n          className: \"IS-top-custom\",\n          style: {\n            borderRadius: (_goToTopStyle$borderR = goToTopStyle === null || goToTopStyle === void 0 ? void 0 : goToTopStyle.borderRadius) !== null && _goToTopStyle$borderR !== void 0 ? _goToTopStyle$borderR : \"none\",\n            boxShadow: (_goToTopStyle$boxShad = goToTopStyle === null || goToTopStyle === void 0 ? void 0 : goToTopStyle.boxShadow) !== null && _goToTopStyle$boxShad !== void 0 ? _goToTopStyle$boxShad : \"none\"\n          },\n          children: /*#__PURE__*/_jsxDEV(GoToTopButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: scrollToTop,\n          className: \"IS-top\",\n          children: \"Top\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 15\n        }, this)\n      }, void 0, false) : null\n    }, void 0, false);\n  };\n  const renderRefreshList = () => {\n    var _refreshButtonStyle$b, _refreshButtonStyle$b2;\n    const refreshState = () => {\n      if (!onRefresh) return;\n      currentIndex.current = 0;\n      startElmObserver.current = null;\n      lastElmObserver.current = null;\n      listRef.current = null;\n      setListItems([]);\n      cssUpdating.current = false;\n      initList.current = false;\n      refApplied.current = false;\n      prevPage.current = undefined;\n      goingToTop.current = false;\n      onRefresh();\n    };\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: renderList() && showRefresh && currentIndex.current === 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: RefreshButton ? /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: refreshState,\n          className: \"IS-refresh-button-custom\",\n          style: {\n            borderRadius: (_refreshButtonStyle$b = refreshButtonStyle === null || refreshButtonStyle === void 0 ? void 0 : refreshButtonStyle.borderRadius) !== null && _refreshButtonStyle$b !== void 0 ? _refreshButtonStyle$b : \"none\",\n            boxShadow: (_refreshButtonStyle$b2 = refreshButtonStyle === null || refreshButtonStyle === void 0 ? void 0 : refreshButtonStyle.boxShadow) !== null && _refreshButtonStyle$b2 !== void 0 ? _refreshButtonStyle$b2 : \"none\"\n          },\n          children: /*#__PURE__*/_jsxDEV(RefreshButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: refreshState,\n          className: \"IS-refresh-button\",\n          children: \"Refresh\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 15\n        }, this)\n      }, void 0, false) : null\n    }, void 0, false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"IS-list-container\",\n    style: {\n      height: height,\n      position: \"relative\"\n    },\n    children: [renderRefreshList(), renderScrollTopView(), renderList() ? /*#__PURE__*/_jsxDEV(List, {\n      listItems: listItems,\n      startElmRef: applyRef() ? startElmRef : null,\n      lastElmRef: applyRef() ? lastElmRef : null,\n      listRef: listRef,\n      loading: loading,\n      Card: Card,\n      listElementHeight: listElementHeight,\n      listGap: listGap,\n      LoadingList: LoadingList,\n      LoadingMore: LoadingMore\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"IS-loading IS-h-100\",\n      children: LoadingList ? /*#__PURE__*/_jsxDEV(LoadingList, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 26\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 44\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 365,\n    columnNumber: 5\n  }, this);\n};\n_s(Scroll, \"+03y97ZHW2fuiXhgItYyBEauuo4=\");\n_c = Scroll;\nexport default Scroll;\nvar _c;\n$RefreshReg$(_c, \"Scroll\");","map":{"version":3,"names":["React","useEffect","useRef","useState","List","jsxDEV","_jsxDEV","Fragment","_Fragment","Scroll","totalItems","list","hasMore","loading","nextPage","fetchData","chunkSize","Card","height","listElementHeight","listGap","LoadingList","LoadingMore","goToTop","refreshList","_s","showGoToTop","GoToTopButton","goToTopStyle","showRefresh","onRefresh","RefreshButton","refreshButtonStyle","currentIndex","startElmObserver","lastElmObserver","listRef","listItems","setListItems","cssUpdating","initList","refApplied","prevPage","undefined","goingToTop","length","current","renderList","isMobileBrowser","test","navigator","userAgent","applyRef","listHeight","Number","elementsHeight","getSlidingWindow","isScrollDown","increment","firstIndex","Math","max","recycleDOM","items","domPageSize","i","push","requestAnimationFrame","adjustPaddings","listParent","document","querySelector","style","display","setTimeout","ul","currentPadTop","parseFloat","paddingTop","currentPadBottom","paddingBottom","remPaddingsVal","newPadTop","newPadBottom","container","scrollPosition","scrollTop","topSentCallback","entry","isIntersecting","botSentCallback","console","error","startElmRef","node","disconnect","IntersectionObserver","entries","observe","lastElmRef","isBottom","scrollToTop","body","classList","add","remove","renderScrollTopView","_goToTopStyle$borderR","_goToTopStyle$boxShad","children","onClick","className","borderRadius","boxShadow","fileName","_jsxFileName","lineNumber","columnNumber","renderRefreshList","_refreshButtonStyle$b","_refreshButtonStyle$b2","refreshState","position","_c","$RefreshReg$"],"sources":["/Users/ashutoshshukla/Documents/workspace/npm-workspace/packages/test/src/components/VirtualInfiniteScroll/Scroll.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport List from \"./List\";\nimport \"./index.css\";\nimport { ScrollProps } from \"./types\";\n\nconst Scroll: React.FC<ScrollProps> = ({\n  totalItems,\n  list,\n  hasMore,\n  loading,\n  nextPage,\n  fetchData,\n  chunkSize,\n  Card,\n  height,\n  listElementHeight = 200,\n  listGap = 10,\n  LoadingList,\n  LoadingMore,\n  goToTop = {},\n  refreshList = {},\n}) => {\n  const { showGoToTop, GoToTopButton, goToTopStyle } = goToTop;\n  const { showRefresh, onRefresh, RefreshButton, refreshButtonStyle } =\n    refreshList;\n  const currentIndex = useRef<number>(0);\n  const startElmObserver = useRef<IntersectionObserver | null>(null);\n  const lastElmObserver = useRef<IntersectionObserver | null>(null);\n  const listRef = useRef<HTMLDivElement | null>(null);\n  const [listItems, setListItems] = useState<Array<{ [key: string]: any }>>([]);\n  const cssUpdating = useRef<boolean>(false);\n  const initList = useRef<boolean>(false);\n  const refApplied = useRef<boolean>(false);\n  const prevPage = useRef<number | undefined>(undefined);\n  const goingToTop = useRef<boolean>(false);\n\n  useEffect(() => {\n    if (!list || !list.length || initList.current) {\n      return;\n    }\n    if (totalItems <= chunkSize * 2) {\n      setListItems(list);\n      initList.current = true;\n      return;\n    }\n    if (hasMore && nextPage === 2) {\n      fetchData(nextPage);\n      return;\n    }\n    if (list.length < chunkSize * 2) return;\n    setListItems(list);\n    initList.current = true;\n  }, [list, chunkSize, totalItems, hasMore, nextPage]);\n\n  const renderList = () => {\n    if (totalItems <= chunkSize * 2) {\n      return list.length ? true : false;\n    }\n    return list.length < chunkSize * 2 ? false : true;\n  };\n\n  function isMobileBrowser() {\n    return /Mobi|Android|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(\n      navigator.userAgent\n    );\n  }\n\n  const applyRef = () => {\n    if (refApplied.current) return true;\n    const listHeight = Number(height);\n    const elementsHeight = listItems.length * (listElementHeight + listGap);\n    if (elementsHeight > listHeight + listElementHeight + listGap + 10) {\n      refApplied.current = true;\n      return true;\n    }\n    return false;\n  };\n\n  const getSlidingWindow = (isScrollDown: boolean) => {\n    const increment = chunkSize;\n    let firstIndex = isScrollDown\n      ? currentIndex.current + increment\n      : currentIndex.current - increment;\n\n    return Math.max(firstIndex, 0);\n  };\n\n  const recycleDOM = (firstIndex: number) => {\n    const items: Array<{ [key: string]: any }> = [];\n    const domPageSize = chunkSize * 2;\n    for (let i = 0; i < domPageSize; i++) {\n      if (list[i + firstIndex]) {\n        items.push(list[i + firstIndex]);\n      }\n    }\n    requestAnimationFrame(() => {\n      setListItems([...items]);\n    });\n  };\n\n  const adjustPaddings = (isScrollDown: boolean) => {\n    if (currentIndex.current === 0) {\n      return;\n    }\n    cssUpdating.current = true;\n    if (!isScrollDown && isMobileBrowser()) {\n      // ===============================this code cut off user touch from the screen for mobile devices=============================== //\n      const listParent = document.querySelector<HTMLElement>(\".IS-list-parent\");\n      if (listParent) {\n        listParent.style.display = \"none\";\n        setTimeout(() => {\n          listParent.style.display = \"block\";\n        }, 0);\n      }\n      // ===============================this code cut off user touch from the screen for mobile devices=============================== //\n    }\n    const ul = document.querySelector<HTMLElement>(\".IS-list\");\n    if (ul) {\n      const currentPadTop = parseFloat(ul.style.paddingTop) || 0;\n      const currentPadBottom = parseFloat(ul.style.paddingBottom) || 0;\n      const remPaddingsVal =\n        (listElementHeight + listGap) * chunkSize + listGap;\n\n      const newPadTop = isScrollDown ? currentPadTop + remPaddingsVal : 0;\n      const newPadBottom = isScrollDown ? 0 : currentPadBottom + remPaddingsVal;\n\n      requestAnimationFrame(() => {\n        const container =\n          document.querySelector<HTMLElement>(\".IS-list-parent\");\n        if (container) {\n          const scrollPosition = container.scrollTop;\n\n          ul.style.paddingTop = `${Math.max(newPadTop, 0)}px`;\n\n          if (!isScrollDown) {\n            container.scrollTop = scrollPosition - currentPadTop;\n          }\n\n          if (!isScrollDown) {\n            container.scrollTop = container.scrollTop + remPaddingsVal;\n            setTimeout(() => {\n              cssUpdating.current = false;\n            }, 0);\n          } else {\n            cssUpdating.current = false;\n          }\n        }\n      });\n    }\n  };\n\n  const topSentCallback = (entry: IntersectionObserverEntry): void => {\n    if (cssUpdating.current || goingToTop.current) return;\n    if (currentIndex.current === 0) {\n      requestAnimationFrame(() => {\n        const container = document.querySelector<HTMLElement>(\".IS-list\");\n        if (container && container.style) {\n          container.style.paddingTop = \"0px\";\n        }\n      });\n    }\n\n    if (entry.isIntersecting && currentIndex.current !== 0) {\n      const firstIndex = getSlidingWindow(false);\n      adjustPaddings(false);\n      recycleDOM(firstIndex);\n      currentIndex.current = firstIndex;\n    }\n  };\n\n  const botSentCallback = (entry: IntersectionObserverEntry): void => {\n    const domPageSize = chunkSize * 2;\n    if (\n      currentIndex.current === totalItems - domPageSize ||\n      loading ||\n      cssUpdating.current ||\n      goingToTop.current\n    ) {\n      return;\n    }\n\n    if (entry.isIntersecting) {\n      const firstIndex = getSlidingWindow(true);\n      if (list[firstIndex + chunkSize]) {\n        currentIndex.current = firstIndex;\n        adjustPaddings(true);\n        recycleDOM(firstIndex);\n      } else if (hasMore) {\n        // safe check\n        if (prevPage.current === nextPage) {\n          console.error(\n            \"Observer disconnected due to too many calls with the same arguments\"\n          );\n          prevPage.current = undefined;\n          return;\n        }\n        fetchData(nextPage);\n        prevPage.current = nextPage;\n      }\n    }\n  };\n\n  const startElmRef = (node: HTMLElement | null) => {\n    if (startElmObserver.current) {\n      startElmObserver.current.disconnect();\n    }\n\n    startElmObserver.current = new IntersectionObserver(\n      (entries: IntersectionObserverEntry[]) => {\n        topSentCallback(entries[0]);\n      }\n    );\n\n    if (node) {\n      startElmObserver.current.observe(node);\n    }\n  };\n\n  const lastElmRef = (node: HTMLElement | null) => {\n    if (lastElmObserver.current) {\n      lastElmObserver.current.disconnect();\n    }\n\n    lastElmObserver.current = new IntersectionObserver(\n      (entries: IntersectionObserverEntry[]) => {\n        botSentCallback(entries[0]);\n      }\n    );\n    if (node) {\n      lastElmObserver.current.observe(node);\n    }\n  };\n\n  // const isTouching = useRef(false);\n  // useEffect(() => {\n  //   const handleTouchStart = () => {\n  //     isTouching.current = true;\n  //   };\n\n  //   const handleTouchEnd = () => {\n  //     isTouching.current = false;\n  //   };\n\n  //   const handleTouchCancel = () => {\n  //     isTouching.current = false;\n  //   };\n\n  //   window.addEventListener(\"touchstart\", handleTouchStart);\n  //   window.addEventListener(\"touchend\", handleTouchEnd);\n  //   window.addEventListener(\"touchcancel\", handleTouchCancel);\n\n  //   return () => {\n  //     window.removeEventListener(\"touchstart\", handleTouchStart);\n  //     window.removeEventListener(\"touchend\", handleTouchEnd);\n  //     window.removeEventListener(\"touchcancel\", handleTouchCancel);\n  //   };\n  // }, [listItems]);\n\n  const isBottom = () => {\n    if (currentIndex.current !== 0) {\n      return true;\n    }\n    return false;\n  };\n\n  const scrollToTop = () => {\n    // disable scroll when going to top\n    document.body.classList.add(\"disable-touch\");\n    goingToTop.current = true;\n    const ul = document.querySelector<HTMLElement>(\".IS-list\");\n    if (ul) {\n      ul.style.paddingTop = `0px`;\n      ul.style.paddingBottom = `0px`;\n      const listParent = document.querySelector(\n        \".IS-list-parent\"\n      ) as HTMLElement;\n      if (listParent) {\n        listParent.scrollTop = 0;\n      }\n      const items: Array<{ [key: string]: any }> = [];\n      const domPageSize = chunkSize * 2;\n      for (let i = 0; i < domPageSize; i++) {\n        if (list[i]) {\n          items.push(list[i]);\n        }\n      }\n      requestAnimationFrame(() => {\n        setListItems([...items]);\n      });\n      currentIndex.current = 0;\n    }\n    goingToTop.current = false;\n    document.body.classList.remove(\"disable-touch\");\n  };\n\n  const renderScrollTopView = () => {\n    return (\n      <>\n        {renderList() && isBottom() && showGoToTop ? (\n          <>\n            {GoToTopButton ? (\n              <div\n                onClick={scrollToTop}\n                className=\"IS-top-custom\"\n                style={{\n                  borderRadius: goToTopStyle?.borderRadius ?? \"none\",\n                  boxShadow: goToTopStyle?.boxShadow ?? \"none\",\n                }}\n              >\n                <GoToTopButton />\n              </div>\n            ) : (\n              <div onClick={scrollToTop} className=\"IS-top\">\n                Top\n              </div>\n            )}\n          </>\n        ) : null}\n      </>\n    );\n  };\n\n  const renderRefreshList = () => {\n    const refreshState = () => {\n      if (!onRefresh) return;\n      currentIndex.current = 0;\n      startElmObserver.current = null;\n      lastElmObserver.current = null;\n      listRef.current = null;\n      setListItems([]);\n      cssUpdating.current = false;\n      initList.current = false;\n      refApplied.current = false;\n      prevPage.current = undefined;\n      goingToTop.current = false;\n      onRefresh();\n    };\n    return (\n      <>\n        {renderList() && showRefresh && currentIndex.current === 0 ? (\n          <>\n            {RefreshButton ? (\n              <div\n                onClick={refreshState}\n                className=\"IS-refresh-button-custom\"\n                style={{\n                  borderRadius: refreshButtonStyle?.borderRadius ?? \"none\",\n                  boxShadow: refreshButtonStyle?.boxShadow ?? \"none\",\n                }}\n              >\n                <RefreshButton />\n              </div>\n            ) : (\n              <div onClick={refreshState} className=\"IS-refresh-button\">\n                Refresh\n              </div>\n            )}\n          </>\n        ) : null}\n      </>\n    );\n  };\n\n  return (\n    <div\n      className=\"IS-list-container\"\n      style={{ height: height, position: \"relative\" }}\n    >\n      {renderRefreshList()}\n      {renderScrollTopView()}\n      {renderList() ? (\n        <List\n          listItems={listItems}\n          startElmRef={applyRef() ? startElmRef : null}\n          lastElmRef={applyRef() ? lastElmRef : null}\n          listRef={listRef}\n          loading={loading}\n          Card={Card}\n          listElementHeight={listElementHeight}\n          listGap={listGap}\n          LoadingList={LoadingList}\n          LoadingMore={LoadingMore}\n        />\n      ) : (\n        <div className=\"IS-loading IS-h-100\">\n          {LoadingList ? <LoadingList /> : <div>Loading...</div>}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Scroll;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}