{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nconst ChunkedData = {}; // Object with number keys and object values\n\nvar totalPages = 0;\nvar totalItems = 0;\nfunction useFixedList(chunkSize = 10, listType, DB) {\n  _s();\n  const [nextPage, setNextPage] = useState(0);\n  const [list, setList] = useState([]);\n  const [hasMore, setHasMore] = useState(true);\n  const fetchData = page => {\n    if (page < 1 || !hasMore || !ChunkedData[page]) {\n      return;\n    }\n    setList(lst => [...lst, ...ChunkedData[page]]);\n    setNextPage(page + 1);\n    if (page + 1 > totalPages) {\n      setHasMore(false);\n    }\n  };\n  const createChunks = () => {\n    let pg = 1;\n    for (let i = 0; i < DB.length; i += chunkSize) {\n      const chunk = DB.slice(i, i + chunkSize);\n      ChunkedData[pg] = chunk;\n      ++pg;\n      ++totalPages;\n    }\n    totalItems = totalPages * chunkSize;\n    setNextPage(1);\n  };\n  useEffect(() => {\n    if (listType === \"FIXED\" && DB.length) {\n      createChunks();\n    }\n  }, [DB, listType]);\n  const reset = () => {\n    setHasMore(true);\n    setList([]);\n    totalPages = 0;\n    totalItems = 0;\n    setNextPage(1);\n  };\n  if (listType === \"DYNAMIC\") {\n    // If listType is DYNAMIC, return default values or empty state\n    return {\n      totalItems: 0,\n      list: [],\n      hasMore: false,\n      nextPage: 0,\n      fetchData: () => {},\n      reset\n    };\n  }\n  return {\n    totalItems,\n    list,\n    hasMore,\n    nextPage,\n    fetchData,\n    reset\n  };\n}\n_s(useFixedList, \"uQLHYLa0wua6yao4jSzEbyYU44Q=\");\nexport default useFixedList;","map":{"version":3,"names":["useEffect","useState","ChunkedData","totalPages","totalItems","useFixedList","chunkSize","listType","DB","_s","nextPage","setNextPage","list","setList","hasMore","setHasMore","fetchData","page","lst","createChunks","pg","i","length","chunk","slice","reset"],"sources":["/Users/ashutoshshukla/Documents/workspace/npm-workspace/packages/test/src/components/VirtualInfiniteScroll/useFixedList.ts"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\ninterface DataObject {\n  [key: string]: any; // Define specific properties as needed\n}\n\ninterface ChunkedData {\n  [key: number]: DataObject[]; // Key as number, value as an object\n}\n\nconst ChunkedData: ChunkedData = {}; // Object with number keys and object values\n\nvar totalPages = 0;\nvar totalItems = 0;\n\nfunction useFixedList(\n  chunkSize: number = 10,\n  listType: \"FIXED\" | \"DYNAMIC\",\n  DB: Array<{ [key: string]: any }>\n) {\n  const [nextPage, setNextPage] = useState<number>(0);\n  const [list, setList] = useState<Array<DataObject>>([]);\n  const [hasMore, setHasMore] = useState(true);\n\n  const fetchData = (page: number) => {\n    if (page < 1 || !hasMore || !ChunkedData[page]) {\n      return;\n    }\n\n    setList((lst) => [...lst, ...ChunkedData[page]]);\n    setNextPage(page + 1);\n\n    if (page + 1 > totalPages) {\n      setHasMore(false);\n    }\n  };\n\n  const createChunks = () => {\n    let pg = 1;\n    for (let i = 0; i < DB.length; i += chunkSize) {\n      const chunk = DB.slice(i, i + chunkSize);\n      ChunkedData[pg] = chunk;\n      ++pg;\n      ++totalPages;\n    }\n    totalItems = totalPages * chunkSize;\n    setNextPage(1);\n  };\n\n  useEffect(() => {\n    if (listType === \"FIXED\" && DB.length) {\n      createChunks();\n    }\n  }, [DB, listType]);\n\n  const reset = () => {\n    setHasMore(true);\n    setList([]);\n    totalPages = 0;\n    totalItems = 0;\n    setNextPage(1);\n  };\n\n  if (listType === \"DYNAMIC\") {\n    // If listType is DYNAMIC, return default values or empty state\n    return {\n      totalItems: 0,\n      list: [],\n      hasMore: false,\n      nextPage: 0,\n      fetchData: () => {},\n      reset,\n    };\n  }\n\n  return {\n    totalItems,\n    list,\n    hasMore,\n    nextPage,\n    fetchData,\n    reset,\n  };\n}\n\nexport default useFixedList;\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAU3C,MAAMC,WAAwB,GAAG,CAAC,CAAC,CAAC,CAAC;;AAErC,IAAIC,UAAU,GAAG,CAAC;AAClB,IAAIC,UAAU,GAAG,CAAC;AAElB,SAASC,YAAYA,CACnBC,SAAiB,GAAG,EAAE,EACtBC,QAA6B,EAC7BC,EAAiC,EACjC;EAAAC,EAAA;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAS,CAAC,CAAC;EACnD,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAoB,EAAE,CAAC;EACvD,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAE5C,MAAMe,SAAS,GAAIC,IAAY,IAAK;IAClC,IAAIA,IAAI,GAAG,CAAC,IAAI,CAACH,OAAO,IAAI,CAACZ,WAAW,CAACe,IAAI,CAAC,EAAE;MAC9C;IACF;IAEAJ,OAAO,CAAEK,GAAG,IAAK,CAAC,GAAGA,GAAG,EAAE,GAAGhB,WAAW,CAACe,IAAI,CAAC,CAAC,CAAC;IAChDN,WAAW,CAACM,IAAI,GAAG,CAAC,CAAC;IAErB,IAAIA,IAAI,GAAG,CAAC,GAAGd,UAAU,EAAE;MACzBY,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMI,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIC,EAAE,GAAG,CAAC;IACV,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGb,EAAE,CAACc,MAAM,EAAED,CAAC,IAAIf,SAAS,EAAE;MAC7C,MAAMiB,KAAK,GAAGf,EAAE,CAACgB,KAAK,CAACH,CAAC,EAAEA,CAAC,GAAGf,SAAS,CAAC;MACxCJ,WAAW,CAACkB,EAAE,CAAC,GAAGG,KAAK;MACvB,EAAEH,EAAE;MACJ,EAAEjB,UAAU;IACd;IACAC,UAAU,GAAGD,UAAU,GAAGG,SAAS;IACnCK,WAAW,CAAC,CAAC,CAAC;EAChB,CAAC;EAEDX,SAAS,CAAC,MAAM;IACd,IAAIO,QAAQ,KAAK,OAAO,IAAIC,EAAE,CAACc,MAAM,EAAE;MACrCH,YAAY,CAAC,CAAC;IAChB;EACF,CAAC,EAAE,CAACX,EAAE,EAAED,QAAQ,CAAC,CAAC;EAElB,MAAMkB,KAAK,GAAGA,CAAA,KAAM;IAClBV,UAAU,CAAC,IAAI,CAAC;IAChBF,OAAO,CAAC,EAAE,CAAC;IACXV,UAAU,GAAG,CAAC;IACdC,UAAU,GAAG,CAAC;IACdO,WAAW,CAAC,CAAC,CAAC;EAChB,CAAC;EAED,IAAIJ,QAAQ,KAAK,SAAS,EAAE;IAC1B;IACA,OAAO;MACLH,UAAU,EAAE,CAAC;MACbQ,IAAI,EAAE,EAAE;MACRE,OAAO,EAAE,KAAK;MACdJ,QAAQ,EAAE,CAAC;MACXM,SAAS,EAAEA,CAAA,KAAM,CAAC,CAAC;MACnBS;IACF,CAAC;EACH;EAEA,OAAO;IACLrB,UAAU;IACVQ,IAAI;IACJE,OAAO;IACPJ,QAAQ;IACRM,SAAS;IACTS;EACF,CAAC;AACH;AAAChB,EAAA,CApEQJ,YAAY;AAsErB,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}